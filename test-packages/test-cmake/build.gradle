import net.derfruhling.gradle.NativeArtifactOutputKind
import net.derfruhling.gradle.ArtifactUsageInformation

import static net.derfruhling.gradle.NativeTarget.*

plugins {
    id 'net.derfruhling.cmake-wrapper'
    id 'net.derfruhling.spm.publisher'
    id 'maven-publish'
}

group = 'net.derfruhling.spacemaven.test'
version = '0.1.0'

repositories {
    maven {
        name 'spacemavenNative'
        url 'https://spacemaven.derfruhling.net/native/'
    }
}

dependencies {
    implementation 'net.derfruhling.spaceport:gtest:1.17.0'
}

spmInfo {
    register(ArtifactUsageInformation) {
        forAll {
            requireCompileDefinition MIAW: true
        }

        platform(MACOS_AARCH64, MACOS_X64) {
            requireCompileDefinition PLATFORM: 'macos'

            expectFramework 'Cocoa', 'OpenGL'
        }

        platform(LINUX_X64) {
            requireCompileDefinition PLATFORM: 'linux'

            expectLibrary 'X11', 'GL'
        }

        platform(WINDOWS_X64) {
            requireCompileDefinition PLATFORM: 'windows'

            expectLibrary 'windows', 'opengl'
        }
    }
}

cmake {
    buildFile = file('CMakeLists.txt')
    publicHeadersArchive = tasks.register('makePublicHeadersArchive', Zip) {
        from(projectDir) {
            include 'test.h'
        }

        into '/'
    }

    targets {
        linuxX64()
        macosX64()
        macosArm64()
        windowsX64()
    }

    variants {
        variant('debug', isDebuggable: true, isOptimized: false) {
            define CMAKE_BUILD_TYPE: 'Debug'
        }

        variant('release', isDebuggable: false, isOptimized: true) {
            define CMAKE_BUILD_TYPE: 'Release'
        }
    }

    configurations {
        staticLibrary {
            outputKind NativeArtifactOutputKind.STATIC_LIBRARY
            define LIBRARY_KIND: 'STATIC'

            targets {
                register('theTest') {
                    target 'the-test'
                }
            }
        }

        sharedLibrary {
            outputKind NativeArtifactOutputKind.SHARED_LIBRARY
            define LIBRARY_KIND: 'SHARED'

            targets {
                register('theTest') {
                    target 'the-test'
                }
            }
        }

        configureEach {
            platforms {
                linuxX64.define PLATFORM: 'linux'
                macosAll.define PLATFORM: 'macos'
                windowsX64.define PLATFORM: 'windows'
            }
        }
    }
}

publishing {
    repositories {
        maven {
            name 'test'
            url project.layout.buildDirectory.dir('test-repo')
        }
    }
}
